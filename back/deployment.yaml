apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-deployment
  labels:
    app: spring
  namespace: mi-espacio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring
  template:
    metadata:
      labels:
        app: spring
    spec:
      containers:
      - name: proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
            "-instances=proyecto-gen2:us-east1:mi-instancia-sql=tcp:3306",
            "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      - name: spring
        image: us.gcr.io/proyecto-gen2/spring-back
        env:
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_USER
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_HOST
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASS
        
        ports:
        - containerPort: 8080
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
---

apiVersion: v1
kind: Service
metadata:
  name: mi-servicio-spring
  namespace: mi-espacio  
spec:
  selector:
    app: spring
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP